---
openapi: 3.0.0
info:
  title: ""
  description: ""
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/ALEWI113/Final/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /movies:
    get:
      description: "requirement 3: anyone can query details about a movie"
      parameters:
      - name: title
        in: query
        description: the title of the movie to get details about
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Skyfall
      responses:
        "200":
          description: successfully retrieved movie details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movie'
    put:
      description: "requirements 11/13/14: an admin can update a movie"
      parameters:
      - name: title
        in: query
        description: the title of the movie to update
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Skyfall
      - name: director
        in: query
        description: the updated director
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Sam Mendes
      - name: genre
        in: query
        description: the updated genre
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Action
      - name: rating
        in: query
        description: the updated rating
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: PG-13
      - name: length
        in: query
        description: the updated length
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 2h23m
      - name: reviewScore
        in: query
        description: the updated review score
        required: false
        style: form
        explode: true
        schema:
          type: number
          example: 7.8
      - name: releaseDate
        in: query
        description: the updated release date
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 2012-10-26
      - name: currentlyPlaying
        in: query
        description: the updated value for if the movie is currently playing
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
      - name: upcomingRelease
        in: query
        description: the updated value for if the move is an upcoming release
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
      responses:
        "200":
          description: successfully updated movie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movie'
    post:
      description: "requirement 13: an admin can create a movie"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/movie'
        required: true
      responses:
        "201":
          description: successfully created movie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movie'
    delete:
      description: "requirement 13: an admin can delete a movie"
      parameters:
      - name: title
        in: query
        description: the title of the movie to delete
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Skyfall
      responses:
        "200":
          description: successfully deleted movie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movie'
  /membership:
    post:
      description: "requirement 7: create a membership"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/membership'
        required: true
      responses:
        "201":
          description: successfully created membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/membership'
  /theater_boxes:
    get:
      summary: Get details of all theater boxes
      description: Returns details of all theater boxes.
      responses:
        "200":
          description: A list of theater boxes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TheaterBox'
    post:
      summary: Create a new theater box
      description: |
        Allows an admin to create a new theater box.
      parameters:
      - name: access_token
        in: header
        description: Admin's access token for authorization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TheaterBox'
        required: true
      responses:
        "201":
          description: Theater box successfully created.
        "401":
          description: Unauthorized. Admin access token is invalid.
        "403":
          description: Forbidden. Only admins are allowed to perform this action.
  /theater_boxes/{box_number}:
    get:
      summary: Get details about a specific theater box
      description: Returns details about a specific theater box.
      parameters:
      - name: box_number
        in: path
        description: Number of the theater box to retrieve details for.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Details about the theater box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterBox'
  /theater_boxes/{box_number}/showtimes/{showtime_id}/reserve_seats:
    post:
      summary: Reserve seats for a given showtime
      description: |
        Allows a member to reserve one or more seats for a given showtime.
      parameters:
      - name: box_number
        in: path
        description: Number of the theater box.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: showtime_id
        in: path
        description: ID of the showtime.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: access_token
        in: header
        description: Member's access token for authorization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/showtime_id_reserve_seats_body'
        required: true
      responses:
        "200":
          description: Seats successfully reserved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterBox'
        "400":
          description: Bad request. Invalid number of seats requested or seats not available.
        "401":
          description: Unauthorized. Member access token is invalid.
        "404":
          description: Not found. Theater box or showtime not found.
        "409":
          description: Conflict. Requested number of seats not available
  /theater_boxes/{box_number}/showtimes/{showtime_id}/reservations/{reservation_id}:
    put:
      summary: Modify reservation for a given showtime
      description: |
        Allows a member to modify their reservation for a given showtime.
      parameters:
      - name: box_number
        in: path
        description: Number of the theater box.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: showtime_id
        in: path
        description: ID of the showtime.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reservation_id
        in: path
        description: ID of the reservation to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: access_token
        in: header
        description: Member's access token for authorization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reservations_reservation_id_body'
        required: true
      responses:
        "200":
          description: Reservation successfully modified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterBox'
        "400":
          description: Bad request. Invalid number of seats requested or seats not available.
        "401":
          description: Unauthorized. Member access token is invalid.
        "404":
          description: "Not found. Theater box, showtime, or reservation not found."
        "409":
          description: Conflict. Requested number of seats not available for the given showtime.
    delete:
      summary: Cancel reservation for a given showtime
      description: |
        Allows a member to cancel their reservation for a given showtime.
      parameters:
      - name: box_number
        in: path
        description: Number of the theater box.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: showtime_id
        in: path
        description: ID of the showtime.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reservation_id
        in: path
        description: ID of the reservation to cancel.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: access_token
        in: header
        description: Member's access token for authorization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Reservation successfully canceled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterBox'
        "401":
          description: Unauthorized. Member access token is invalid.
        "404":
          description: "Not found. Theater box, showtime, or reservation not found."
        "409":
          description: Conflict. Showtime has already occurred.
  /showtimes:
    get:
      summary: Get all showtimes
      description: Returns a list of all showtimes.
      responses:
        "200":
          description: A list of showtimes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Showtime'
    post:
      summary: Create a new showtime
      description: |
        Allows an admin to create a new showtime.
      parameters:
      - name: access_token
        in: header
        description: Admin's access token for authorization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Showtime'
        required: true
      responses:
        "201":
          description: Showtime successfully created.
        "401":
          description: Unauthorized. Admin access token is invalid.
        "403":
          description: Forbidden. Only admins are allowed to perform this action.
  /showtimes/{showtime_id}:
    get:
      summary: Get details about a specific showtime
      description: Returns details about a specific showtime.
      parameters:
      - name: showtime_id
        in: path
        description: ID of the showtime to retrieve details for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Details about the showtime.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Showtime'
    put:
      summary: Update a showtime
      description: |
        Allows an admin to update a showtime.
      parameters:
      - name: showtime_id
        in: path
        description: ID of the showtime to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: access_token
        in: header
        description: Admin's access token for authorization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Showtime'
        required: true
      responses:
        "200":
          description: Showtime successfully updated.
        "401":
          description: Unauthorized. Admin access token is invalid.
        "403":
          description: Forbidden. Only admins are allowed to perform this action.
        "404":
          description: Not found. Showtime not found.
    delete:
      summary: Delete a showtime
      description: |
        Allows an admin to delete a showtime.
      parameters:
      - name: showtime_id
        in: path
        description: ID of the showtime to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: access_token
        in: header
        description: Admin's access token for authorization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Showtime successfully deleted.
        "401":
          description: Unauthorized. Admin access token is invalid.
        "403":
          description: Forbidden. Only admins are allowed to perform this action.
        "404":
          description: Not found. Showtime not found.
  /showtimes/{showtime_id}/movies:
    get:
      summary: Get movies for a specific showtime
      description: Returns a list of movies playing at a specific showtime.
      parameters:
      - name: showtime_id
        in: path
        description: ID of the showtime to retrieve movies for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A list of movies playing at the showtime.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/movie'
components:
  schemas:
    TheaterBox:
      type: object
      properties:
        box_number:
          type: integer
          description: Number of the theater box.
        total_seats:
          type: integer
          description: Total number of seats in the theater box.
        reserved_seats:
          type: integer
          description: Number of reserved seats in the theater box.
        ticket_price:
          type: number
          description: Price of a ticket for the theater box.
          format: float
    Showtime:
      required:
      - date_time
      - id
      - movie
      - theater_box
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the showtime.
        date_time:
          type: string
          description: Date and time of the showtime.
          format: date-time
        movie:
          $ref: '#/components/schemas/movie'
        theater_box:
          $ref: '#/components/schemas/TheaterBox'
    movie:
      type: object
      properties:
        title:
          type: string
          example: Oppenheimer
        director:
          type: string
          example: Christopher Nolan
        genre:
          type: string
          example: Thriller
        rating:
          type: string
          example: R
        length:
          type: string
          example: 3h5m
        releaseDate:
          type: string
          format: date
          example: 2023-07-21
        reviewScore:
          type: number
          example: 8.9
        currentlyPlaying:
          type: boolean
          example: true
        upcomingRelease:
          type: boolean
          example: false
    membership:
      type: object
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Smith
        email:
          type: string
          format: email
          example: john.smith@email.com
    showtime_id_reserve_seats_body:
      required:
      - seats
      type: object
      properties:
        seats:
          minimum: 1
          type: integer
          description: Number of seats to reserve.
    reservations_reservation_id_body:
      required:
      - seats
      type: object
      properties:
        seats:
          minimum: 1
          type: integer
          description: New number of seats for the reservation.
